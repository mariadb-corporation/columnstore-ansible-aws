---

- hosts: "pm1"
  become: yes
  become_user: root
  vars_files:
    - '../inventory/group_vars/distro/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yml'

  tasks:

  - name: "Turn Off Strict Password"
    mysql_variables:
      variable: strict_password_validation
      value: 'OFF'
      login_unix_socket: '{{ mariadb_socket }}'

  - name: "Removing 'Test' Database If Exists"
    mysql_db:
      name: test
      state: absent
      login_unix_socket: '{{ mariadb_socket }}'

  - name: "Adding '{{ admin_user }}'@'%'"
    mysql_user:
      name: '{{ admin_user }}'
      host: '%'
      password: '{{ admin_pass }}'
      update_password: on_create
      priv: '*.*:ALL,GRANT'
      state: present
      login_unix_socket: '{{ mariadb_socket }}'
    no_log: true

  - name: "Adding '{{ admin_user }}'@'localhost'"
    mysql_user:
      name: '{{ admin_user }}'
      host: 'localhost'
      password: '{{ admin_pass }}'
      update_password: on_create
      priv: '*.*:ALL,GRANT'
      state: present
      login_unix_socket: '{{ mariadb_socket }}'
    no_log: true

  - name: "Adding {{ cej_user }}@localhost User To Database"
    mysql_user:
      name: '{{ cej_user }}'
      host: 'localhost'
      password: '{{ cej_pass }}'
      update_password: on_create
      priv: '*.*:SELECT'
      state: present
      login_unix_socket: '{{ mariadb_socket }}'
    no_log: true

  - name: "Adding {{ cej_user }}@10.% User To Database"
    mysql_user:
      name: '{{ cej_user }}'
      host: '10.%'
      password: '{{ cej_pass }}'
      update_password: on_create
      priv: '*.*:SELECT'
      state: present
      login_unix_socket: '{{ mariadb_socket }}'
    no_log: true

# Workaround: Ansible mysql_user module does not yet work with MariaDB 10.5.x privileges
  - name: "Adding '{{ maxscale_user }}'@'%'"
    shell: |
      mariadb -e "GRANT BINLOG ADMIN,
                  READ_ONLY ADMIN,
                  RELOAD,
                  REPLICATION CLIENT,
                  REPLICATION MASTER ADMIN,
                  REPLICATION SLAVE ADMIN,
                  REPLICATION SLAVE,
                  SHOW DATABASES ON *.*
                  TO '{{ maxscale_user }}'@'%'
                  IDENTIFIED BY '{{ maxscale_pass }}';
                  GRANT SELECT ON mysql.*
                  TO '{{ maxscale_user }}'@'%';"

# Workaround: Ansible mysql_user module does not yet work with MariaDB 10.5.x privileges
  - name: "Adding '{{ maxscale_user }}'@'localhost'"
    shell: |
      mariadb -e "GRANT BINLOG ADMIN,
                  READ_ONLY ADMIN,
                  RELOAD,
                  REPLICATION CLIENT,
                  REPLICATION MASTER ADMIN,
                  REPLICATION SLAVE ADMIN,
                  REPLICATION SLAVE,
                  SHOW DATABASES ON *.*
                  TO '{{ maxscale_user }}'@'localhost'
                  IDENTIFIED BY '{{ maxscale_pass }}';
                  GRANT SELECT ON mysql.*
                  TO '{{ maxscale_user }}'@'localhost';"

# Workaround: Ansible mysql_user module does not yet work with MariaDB 10.5.x privileges
  - name: "Adding '{{ repli_user }}'@'%'"
    shell: |
      mariadb -e "GRANT REPLICATION SLAVE ADMIN,
                  REPLICATION SLAVE,
                  REPLICATION CLIENT,
                  REPLICATION MASTER ADMIN ON *.*
                  TO '{{ repli_user }}'@'%'
                  IDENTIFIED BY '{{ repli_pass }}';"

# Workaround: Ansible mysql_user module does not yet work with MariaDB 10.5.x privileges
  - name: "Adding '{{ repli_user }}'@'localhost'"
    shell: |
      mariadb -e "GRANT REPLICATION SLAVE ADMIN,
                  REPLICATION SLAVE,
                  REPLICATION CLIENT,
                  REPLICATION MASTER ADMIN ON *.*
                  TO '{{ repli_user }}'@'localhost'
                  IDENTIFIED BY '{{ repli_pass }}';"

  - name: "Turn On Strict Password"
    mysql_variables:
      variable: strict_password_validation
      value: 'ON'
      login_unix_socket: '{{ mariadb_socket }}'

  - name: "Updating Columnstore.xml With Cross Engine Support User"
    command: mcsSetConfig CrossEngineSupport User '{{ cej_user }}'

  - name: "Updating Columnstore.xml With Cross Engine Support Password"
    command: mcsSetConfig CrossEngineSupport Password '{{ cej_pass }}'

  - name: "Updating Columnstore.xml With TotalUmMemory"
    command: mcsSetConfig HashJoin TotalUmMemory "25%"

- hosts: "pm2,pm3"
  become: yes
  become_user: root
  vars_files:
    - '../inventory/group_vars/distro/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yml'

  tasks:

  - name: "Setting Replicas Read Only"
    mysql_variables:
      variable: read_only
      value: '1'
      login_unix_socket: '{{ mariadb_socket }}'

  - name: "Stopping Replicas"
    mysql_replication:
      mode: stopslave
      login_unix_socket: '{{ mariadb_socket }}'

  - name: "Setting Primary Info"
    mysql_replication:
      mode: changemaster
      master_host: '{{ hostvars.pm1.ansible_host }}'
      master_user: '{{ repli_user }}'
      master_password: '{{ repli_pass }}'
      login_unix_socket: '{{ mariadb_socket }}'

  - name: "Converting to MariaDB GTID"
    command: mysql -e "CHANGE MASTER TO master_use_gtid=slave_pos";

  - name: "Starting Replicas"
    mysql_replication:
      mode: startslave
      login_unix_socket: '{{ mariadb_socket }}'

- hosts: "pm1"
  become: yes
  become_user: root
  vars_files:
    - '../inventory/group_vars/distro/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yml'

  tasks:

  - name: "Adding Second Node To ColumnStore Cluster"
    uri:
      url: https://{{ hostvars.pm1.ansible_host }}:8640/cmapi/0.4.0/cluster/add-node
      method: PUT
      headers:
        Content-Type: application/json
        x-api-key: "{{ api_key }}"
      validate_certs: no
      return_content: yes
      status_code: 200
      body_format: json
      body: {"timeout": 60, "node": "{{ hostvars.pm2.ansible_host }}"}
      timeout: 60

  - name: "Adding Third Node To ColumnStore Cluster"
    uri:
      url: https://{{ hostvars.pm1.ansible_host }}:8640/cmapi/0.4.0/cluster/add-node
      method: PUT
      headers:
        Content-Type: application/json
        x-api-key: "{{ api_key }}"
      validate_certs: no
      return_content: yes
      status_code: 200
      body_format: json
      body: {"timeout": 60, "node": "{{ hostvars.pm3.ansible_host }}"}
      timeout: 60

  - name: "Run DBBuilder Now If Storagemanager Is Active"
    shell: /usr/bin/dbbuilder 7
    when: use_s3 == true

  - name: "Waiting For Cluster To Initialize"
    shell: sleep 15
