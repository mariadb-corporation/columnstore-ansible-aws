---

- hosts: "primary"
  become: yes
  become_user: root
  vars_files:
    - '../inventory/group_vars/distro/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yml'

  tasks:

  - name: "Setting Facts"
    set_fact:
      first_octet: "{{ mcs1_private.split('.')[0:1][0] }}.%"

  - name: "Turn Off Strict Password"
    mysql_variables:
      variable: strict_password_validation
      value: 'OFF'
      login_unix_socket: '{{ mariadb_socket }}'
    no_log: true

  - name: "Removing 'Test' Database If Exists"
    mysql_db:
      name: test
      state: absent
      login_unix_socket: '{{ mariadb_socket }}'
    no_log: true

  - name: "Adding '{{ admin_user }}'@'%'"
    mysql_user:
      name: '{{ admin_user }}'
      host: '%'
      password: '{{ admin_pass }}'
      update_password: on_create
      priv: '*.*:ALL,GRANT'
      state: present
      login_unix_socket: '{{ mariadb_socket }}'
    no_log: true

  - name: "Adding '{{ cej_user }}'@'127.0.0.1' User To Database"
    mysql_user:
      name: '{{ cej_user }}'
      host: '127.0.0.1'
      password: '{{ cej_pass }}'
      update_password: on_create
      priv: '*.*:SELECT,PROCESS'
      state: present
      login_unix_socket: '{{ mariadb_socket }}'
    no_log: true

  - name: "Adding '{{ maxscale_user }}'@'{{ first_octet }}' User To Database"
    mysql_user:
      name: '{{ maxscale_user }}'
      host: '{{ first_octet }}'
      password: '{{ maxscale_pass }}'
      update_password: on_create
      priv: '*.*:SHOW DATABASES,BINLOG ADMIN,READ_ONLY ADMIN,RELOAD,REPLICATION MASTER ADMIN,REPLICATION SLAVE ADMIN,REPLICATION SLAVE/mysql.*:SELECT'
      state: present
      login_unix_socket: '{{ mariadb_socket }}'
    no_log: true

  - name: "Adding '{{ repli_user }}'@'{{ first_octet }}' User To Database"
    mysql_user:
      name: '{{ repli_user }}'
      host: '{{ first_octet }}'
      password: '{{ repli_pass }}'
      update_password: on_create
      priv: '*.*:REPLICATION MASTER ADMIN,REPLICATION SLAVE ADMIN,REPLICATION SLAVE'
      state: present
      login_unix_socket: '{{ mariadb_socket }}'
    no_log: true

# Workaround: Ansible mysql_user module does not yet work with MariaDB 10.5.8 privileges
  - name: "Adding Grant For '{{ maxscale_user }}'@'{{ first_octet }}'"
    shell: |
      mariadb -e "GRANT SLAVE MONITOR ON *.* TO '{{ maxscale_user }}'@'{{ first_octet }}';
                  GRANT SLAVE MONITOR ON *.* TO '{{ repli_user }}'@'{{ first_octet }}';"

  - name: "Turn On Strict Password"
    mysql_variables:
      variable: strict_password_validation
      value: 'ON'
      login_unix_socket: '{{ mariadb_socket }}'

  - name: "Updating Columnstore.xml With Cross Engine Support User"
    command: mcsSetConfig CrossEngineSupport User '{{ cej_user }}'

  - name: "Updating Columnstore.xml With Cross Engine Support Password"
    command: mcsSetConfig CrossEngineSupport Password '{{ cej_pass }}'

- hosts: "replicas"
  become: yes
  become_user: root
  vars_files:
    - '../inventory/group_vars/distro/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yml'

  tasks:

  - name: "Setting Replicas Read Only"
    mysql_variables:
      variable: read_only
      value: '1'
      login_unix_socket: '{{ mariadb_socket }}'

  - name: "Stopping Replicas"
    mysql_replication:
      mode: stopslave
      login_unix_socket: '{{ mariadb_socket }}'

  - name: "Resetting Replicas"
    mysql_replication:
      mode: resetslave
      login_unix_socket: '{{ mariadb_socket }}'

  - name: "Setting Primary Info"
    mysql_replication:
      mode: changemaster
      master_host: '{{ mcs1_private }}'
      master_user: '{{ repli_user }}'
      master_password: '{{ repli_pass }}'
      login_unix_socket: '{{ mariadb_socket }}'

  - name: "Converting to MariaDB GTID"
    command: mysql -e "CHANGE MASTER TO master_use_gtid=slave_pos";

  - name: "Starting Replicas"
    mysql_replication:
      mode: startslave
      login_unix_socket: '{{ mariadb_socket }}'

- hosts: "primary"
  become: yes
  become_user: root
  vars_files:
    - '../inventory/group_vars/distro/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yml'

  tasks:

  - name: "Adding Nodes To ColumnStore Cluster"
    uri:
      url: https://{{ hostvars.mcs1_private.ansible_host }}:8640/cmapi/0.4.0/cluster/add-node
      method: PUT
      headers:
        Content-Type: application/json
        x-api-key: "{{ api_key }}"
      validate_certs: no
      return_content: yes
      status_code: 200
      body_format: json
      body: "{{ item }}"
      timeout: 180
    loop:
        - {"timeout":180, "node":"{{ hostvars.mcs1_private.ansible_host }}"}
        - {"timeout":180, "node":"{{ hostvars.mcs2_private.ansible_host }}"}
        - {"timeout":180, "node":"{{ hostvars.mcs3_private.ansible_host }}"}
