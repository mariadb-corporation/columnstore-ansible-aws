---

- hosts: "primary,replicas,maxscale"
  become: yes
  become_user: root
  vars_files:
    - '../inventory/group_vars/distro/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yml'

  tasks:

  - name: "Getting MariaDB Enterprise Repo Setup Script"
    get_url:
      url: https://dlm.mariadb.com/enterprise-release-helpers/mariadb_es_repo_setup
      dest: /usr/local/bin/mariadb_es_repo_setup
      mode: 'a+x'

  - name: "Adding MariaDB Enterprise Repo Script Dependency"
    apt:
      name: apt-transport-https
      state: present
    when: ansible_distribution|lower == 'ubuntu'

  - name: "Setting Up MariaDB Enterprise Repo"
    command: /usr/local/bin/mariadb_es_repo_setup --token={{ enterprise_token }} --mariadb-server-version='{{ mariadb_version }}' --mariadb-maxscale-version='{{ maxscale_version }}' --apply

- hosts: "primary,replicas"
  become: yes
  become_user: root
  vars_files:
    - '../inventory/group_vars/distro/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yml'

  tasks:

  - name: "Installing MariaDB Items"
    package:
      name: '{{ item }}'
      state: present
      update_cache: yes
    with_items:
      - '{{ mariadb_client }}'
      - '{{ mariadb_server }}'
      - '{{ mariadb_columnstore }}'
      - '{{ mariadb_columnstore_cmapi }}'

  - name: "Configuring Storagemanager"
    template:
      src: ../templates/storagemanager.cnf.j2
      dest: /etc/columnstore/storagemanager.cnf
      owner: mysql
      group: mysql
    when: use_s3 == true

  - name: "Adjusting Bind Address"
    replace:
      path: '{{ server_cnf }}'
      regexp: '^bind-address'
      replace: '#bind-address'

  - name: "Setting Server IDs"
    replace:
      path: '{{ columnstore_cnf }}'
      regexp: '^.*server.id.*$'
      replace: "server_id = {{ inventory_hostname.split('s')[-1] }}"

  - name: "Configuring columnstore.cnf"
    blockinfile:
      path: '{{ columnstore_cnf }}'
      block: |
        character_set_server = utf8
        collation_server = utf8_general_ci
        columnstore_use_import_for_batchinsert=ON
        gtid_strict_mode = ON
        ignore_db_dirs = .pki
        log_bin = /var/log/mariadb/mariadb-bin
        log_bin_index = /var/log/mariadb/mariadb-bin.index
        log_error = /var/log/mariadb/mariadb-error.log
        log_slave_updates = ON
        lower_case_table_names = 1
        relay_log = /var/log/mariadb/mariadb-relay
        relay_log_index = /var/log/mariadb/mariadb-relay.index

  - name: "Verify Ownership Of Log Folder"
    file:
      path: /var/log/mariadb
      state: directory
      owner: mysql
      group: mysql
      mode: '0755'

  - name: "Enabling MariaDB Server"
    systemd:
      name: mariadb
      state: restarted
      enabled: yes

  - name: "Restarting Columnstore Engine"
    systemd:
      name: mariadb-columnstore
      state: restarted
      enabled: no

  - name: "Enabling CMAPI Server"
    systemd:
      name: mariadb-columnstore-cmapi
      state: started
      enabled: yes

- hosts: "maxscale"
  become: yes
  become_user: root
  vars_files:
    - '../inventory/group_vars/distro/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yml'

  tasks:

  - name: "Installing MaxScale Items"
    package:
      name: '{{ item }}'
      state: present
      update_cache: yes
    with_items:
      - '{{ mariadb_client }}'
      - '{{ maxscale }}'
